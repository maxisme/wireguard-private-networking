---
- name: Install linux headers (Ubuntu)
  apt:
    update_cache: yes
    state: present
    name: linux-headers-generic
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version|int < 20

- name: Add backports repository (Debian)
  copy:
    src: templates/backports.list
    dest: /etc/apt/sources.list.d/backport.list
  when:
    - ansible_distribution == "Debian" and debian_enable_backports

- name: Install wireguard (apt)
  apt:
    update_cache: yes
    state: present
    name: wireguard
  when:
    - ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: Install wireguard (pacman)
  pacman:
    name:
      - wireguard-dkms
      - wireguard-tools
    state: present
  when:
    - ansible_distribution == "Archlinux"

- name: Set whether host is private
  set_fact:
    private_net: True
  when: (ansible_host and '192.168' in ansible_host) or ansible_connection == "local"

- name: Set whether host is private
  set_fact:
    private_ips: "{{ lookup('template', './private_ips.j2') }}"
  when: (ansible_host and '192.168' in ansible_host) or ansible_connection == "local"

- name: Install wireguard (CentOS 8)
  block:
    - name: Install epel repo (CentOS 8)
      dnf:
        name:
          - elrepo-release
          - epel-release
        state: present

    - name: Install mod and tools (CentOS 8)
      dnf:
        name:
          - kmod-wireguard
          - wireguard-tools
        state: present

    - name: Create path (CentOS 8)
      file:
        path: "{{ wireguard_path }}"
        state: directory
        mode: u=rwx,g=,o=
        group: root

  when: ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "8"

- name: Install wireguard (CentOS 7)
  block:
    - name: Install epel (CentOS 7)
      yum:
        name:
          - epel-release
          - https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm
        state: present

    - name: Install plugin-elrepo wireguard (CentOS 7)
      yum:
        name:
          - yum-plugin-elrepo
        state: present

    - name: Install wireguard module and tools (CentOS 7)
      yum:
        name:
          - kmod-wireguard
          - wireguard-tools
        state: present

    - name: Creat path (CentOS 7)
      file:
        path: "{{ wireguard_path }}"
        state: directory
        mode: u=rwx,g=,o=
        group: root

  when: ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7"

- name: Install wireguard and tools (zypper)
  zypper:
    name:
      - wireguard-tools
    state: present
  when:
    - ansible_distribution == "openSUSE Leap"

- name: Read private key
  stat:
    path: "{{ wireguard_path }}/privatekey"
  register: privatekey

- name: Generate wireguard keys
  shell: set -o pipefail && \
         umask 077; wg genkey | tee {{ wireguard_path  }}/privatekey | wg pubkey > {{ wireguard_path }}/publickey
  args:
    executable: /bin/bash
  when: not privatekey.stat.exists

- name: Read private key
  slurp:
    src: "{{ wireguard_path }}/privatekey"
  register: private

- name: Read public key
  slurp:
    src: "{{ wireguard_path }}/publickey"
  register: public

- name: Generate configs
  template:
    src: interface.conf.j2
    dest: "{{ wireguard_path }}/{{ wireguard_network_name }}.conf"
    owner: root
    group: root
    mode: "u=rw,g=r,o="
  register: config

- name: Enable wg-quick service
  service:
    name: "wg-quick@{{ wireguard_network_name }}"
    enabled: yes

- name: Restart wg-quick service
  service:
    name: "wg-quick@{{ wireguard_network_name }}"
    state: restarted

- name: Enable port forwarding
  ansible.posix.sysctl:
    name: "net.ipv4.conf.{{ wireguard_network_name }}.forwarding"
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes
  when: wg_router is defined

- name: Generate script to verify wireguard connections
  template:
    src: ping-test.j2
    dest: "/tmp/ping-test.sh"
    owner: root
    group: root
    mode: "u=rw,g=r,o="

- name: Run script to verify wireguard connections
  command: sh /tmp/ping-test.sh
  remote_user: root
